Q.Explain why data structures and algorithms are essential in handling large inventories.

Ans. 1.Efficient Data Storage and Retrieval- Choosing the right data structure (e.g., arrays, linked lists, trees, hash tables) allows for efficient storage and retrieval of inventory items. For example, a hash table can provide constant-time complexity for insertions and lookups, which is crucial for large inventories.
        Example: Using a hash table to store inventory items by their unique IDs allows for quick access and updates.

2. Fast Search and Query Operations- Implementing efficient search algorithms (e.g., binary search, hash-based search) reduces the time required to find specific items in the inventory.
        Example: Binary search on a sorted array can locate an item in logarithmic time, making it much faster than a linear search on a large list.

3.Managing Dynamic Data- Dynamic data structures like linked lists, dynamic arrays, and balanced trees (e.g., AVL trees, Red-Black trees) can grow and shrink as needed, providing flexibility in managing inventories that change frequently.
        Example: A dynamic array can automatically resize itself when new items are added, maintaining efficient access and modification times.


Q.Discuss the types of data structures suitable for this problem.

1.Batch Processing: For bulk updates or inserts, consider batch processing to reduce the overhead of multiple individual operations.
2.Indexing: If search operations on non-key attributes (e.g., productName) become frequent, consider adding indexing mechanisms or secondary data structures to support faster lookups.